<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V5.0//EN"
"http://docbook.org/xml/5.0/dtd/docbook.dtd">
<section id="reference.tcl-extensions">
  <title>Tcl Extensions &amp; Useful Tcl Commands</title>

  <para>A MacPorts Portfile is a Tcl script, so it may contain any arbitrary
  Tcl code you may learn about in a <link
  xlink:href="http://tmml.sourceforge.net/doc/tcl/">Tcl reference manual</link>.
  However, few authors will use arbitrary Tcl code; the vast majority will use
  a subset of Tcl commands and a number of Tcl extensions that are coded within
  MacPorts for performing the most common tasks needed for Portfiles. The list
  below is a list of useful Tcl commands for Portfile development and Tcl
  extensions provided by MacPorts base.</para>

  <variablelist>
    <varlistentry>
      <term>file</term>

      <listitem>
        <para>The standard Tcl <command>file</command> command can be used for
          a number of operations on files, such as moving, renaming, deleting,
          or creating directories, among others. For a complete list, consult
          the <link xlink:href="http://tmml.sourceforge.net/doc/tcl/file.html">Tcl
            reference manual for the <command>file</command> command</link>,
          or the Tcl file manpage in the <option>n</option> section of manpages
          on your machine using <command>man n file</command></para>

        <variablelist>
          <varlistentry>
            <term>file copy</term>

            <listitem>
              <para>Copy a file.</para>
            </listitem>
          </varlistentry>
        </variablelist>

        <variablelist>
          <varlistentry>
            <term>file rename</term>

            <listitem>
              <para>Rename a file.</para>
            </listitem>
          </varlistentry>
        </variablelist>

        <variablelist>
          <varlistentry>
            <term>file delete [-force]</term>

            <listitem>
              <para>Remove a file or (with <option>-force</option>) a directory
                and its contents.</para>
            </listitem>
          </varlistentry>
        </variablelist>

        <variablelist>
          <varlistentry>
            <term>file mkdir</term>

            <listitem>
              <para>Create a directory.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>macros</term>

      <listitem>
        <para>For the above operations provided by Tcl's
          <command>file</command> command, MacPorts provides the following
          shorthands. These used to be separate functions to work around bugs
          in older Tcl versions or on old versions of OS X. Nowadays those are
          simple aliases.</para>

        <variablelist>
          <varlistentry>
            <term>copy</term>

            <listitem>
              <para>Shorthand alternative to <code>file copy</code>.</para>
            </listitem>
          </varlistentry>
        </variablelist>

        <variablelist>
          <varlistentry>
            <term>move</term>

            <listitem>
              <para>Shorthand alternative to <code>file rename</code>.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>delete file ...</term>

            <listitem>
              <para>Deletes each of the given files/directories. Behaves
                similarly to file delete -force except that file delete -force
                will fail to delete directories properly on 10.3
                systems.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>touch</term>

            <listitem>
              <para>Mimics the BSD touch command.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>ln</term>

            <listitem>
              <para>Mimics the BSD ln command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>xinstall</term>

      <listitem>
        <para>xinstall copies files and creates directories; it is intended to
        be compatible with install(1).</para>

        <variablelist>
          <varlistentry>
            <term>xinstall [-o <replaceable>owner</replaceable>] [-g
            <replaceable>group</replaceable>] [-m
            <replaceable>mode</replaceable>] [<replaceable>file1 file2
            ...</replaceable>] <replaceable>directory</replaceable></term>

            <listitem>
              <para>Install the specified file(s) to a destination
              directory.</para>
            </listitem>
          </varlistentry>
        </variablelist>

        <variablelist>
          <varlistentry>
            <term>xinstall [-o <replaceable>owner</replaceable>] [-g
            <replaceable>group</replaceable>] [-m
            <replaceable>mode</replaceable>] [-W
            <replaceable>dir</replaceable>] [<replaceable>file1 file2
            ...</replaceable>] <replaceable>directory</replaceable></term>

            <listitem>
              <para>Change to <option>dir</option> and install file(s) to a
              destination directory.</para>
            </listitem>
          </varlistentry>
        </variablelist>

        <variablelist>
          <varlistentry>
            <term>xinstall [-o <replaceable>owner</replaceable>] [-g
            <replaceable>group</replaceable>] [-m
            <replaceable>mode</replaceable>] {*}[glob
            <replaceable>pattern</replaceable>]
            <replaceable>directory</replaceable></term>

            <listitem>
              <para>Install the file(s) matching the glob pattern to a
              destination directory. Note the use of the <option>{*}</option>
              operator to convert the list returned by <command>glob</command>
              into separate arguments to <command>xinstall</command>.</para>
            </listitem>
          </varlistentry>
        </variablelist>

        <variablelist>
          <varlistentry>
            <term>xinstall -d [-o <replaceable>owner</replaceable>] [-g
            <replaceable>group</replaceable>] [-m
            <replaceable>mode</replaceable>]
            <replaceable>directory</replaceable></term>

            <listitem>
              <para>Create a directory including parent directories if
              necessary.</para>
            </listitem>
          </varlistentry>
        </variablelist>

        <para>Defaults:</para>

        <itemizedlist>
          <listitem>
            <para>owner -</para>
          </listitem>

          <listitem>
            <para>group -</para>
          </listitem>

          <listitem>
            <para>mode - <option>0755</option></para>
          </listitem>
        </itemizedlist>

        <para>Examples:</para>

        <programlisting>xinstall -m 640 ${worksrcpath}/README \
   ${destroot}${prefix}/share/doc/${name}</programlisting>

        <programlisting>xinstall -m 640 -W ${worksrcpath}/doc README INSTALL COPY \
   ${destroot}${prefix}/share/doc/${name}</programlisting>

        <programlisting>xinstall -m 640 {*}[glob ${worksrcpath}/doc/*] \
   ${destroot}${prefix}/share/doc/${name}</programlisting>

        <programlisting>xinstall -d ${destroot}${prefix}/share/doc/${name}</programlisting>
      </listitem>
    </varlistentry>

    <varlistentry id="reference.tcl-extensions.strsed">
        <term>strsed</term>

        <listitem>
            <para>strsed can be used for string manipulations using regular
            expressions. It supports a small subset of the commands known
            from sed(1).</para>

            <variablelist>
                <varlistentry>
                    <term>strsed <replaceable>string</replaceable>
                    s/<replaceable>regex</replaceable>/<replaceable>replacement</replaceable>/
                    </term>

                    <listitem>
                        <para>Replaces the first instance of
                        <replaceable>regex</replaceable> with
                        <replaceable>replacement</replaceable>. Refer to
                        re_format(7) for a definition of regular expression
                        syntax.</para>
                    </listitem>
                </varlistentry>

                <varlistentry>
                    <term>strsed <replaceable>string</replaceable>
                    g/<replaceable>regex</replaceable>/<replaceable>replacement</replaceable>/
                    </term>

                    <listitem>
                        <para>The same as the previous format, except all
                        instances of the pattern will be replaced, not only
                        the first (mnemonic: 'g' is for global).</para>
                    </listitem>
                </varlistentry>
            </variablelist>
        </listitem>
    </varlistentry>

    <varlistentry>
      <term>reinplace</term>

      <listitem>
        <para>Allows text specified by a regular expression to be replaced by
        new text, in-place (the file will be updated itself, no need to place
        output into a new file and rename).</para>

        <variablelist>
          <varlistentry>
            <term>
              reinplace
              [-locale <replaceable>locale</replaceable>]
              [-n]
              [-W <replaceable>dir</replaceable>]
              [--] <replaceable>command</replaceable>
              <replaceable>file ...</replaceable>
            </term>

            <listitem>
              <para>Replace text given by the regular expression portion of
              the command with the replacement text, in all files
              specified.</para>

              <para>Use -locale to set the locale. The default locale is <code>en_US.UTF-8</code>.
	      For example, <code>-locale C</code> will allow a non-UTF-8 file to be modified (which
	      may otherwise give the error "sed: RE error: illegal byte sequence"), but only operating
	      on ASCII characters. If you need it to work on non-ASCII characters you need to set a
	      locale with the correct charset for the file, e.g. "en_US.ISO8859-1".</para>

              <para>-n is passed to sed to suppress echoing result</para>

              <para>-W to set a common working directory for multiple
              files</para>

              <para>Use -E to use the extended regular expression style (see
              re_format(7) for a description of the basic and extended
              styles)</para>

              <para>Use -- to end option processing and allow any further
              dashes not to be treated as options.</para>
            </listitem>
          </varlistentry>
        </variablelist>

        <para>Examples:</para>

        <programlisting>reinplace -W ${worksrcpath} "s|/usr/local|${prefix}|g" configure setup.py</programlisting>

        <programlisting>reinplace "s|@@PREFIX@@|${prefix}|g" ${worksrcpath}/Makefile</programlisting>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>user/group</term>

      <listitem>
        <para></para>

        <variablelist>
          <varlistentry>
            <term>adduser username [uid=<replaceable>uid</replaceable>]
            [gid=<replaceable>gid</replaceable>]
            [passwd=<replaceable>passwd</replaceable>]
            [realname=<replaceable>realname</replaceable>]
            [home=<replaceable>home</replaceable>]
            [shell=<replaceable>shell</replaceable>]</term>

            <listitem>
              <para>Add a new local user to the system with the specified uid,
              gid, password, real name, home directory and login shell.</para>
            </listitem>
          </varlistentry>
        </variablelist>

        <variablelist>
          <varlistentry>
            <term>existsuser <replaceable>username</replaceable></term>

            <listitem>
              <para>Check if a local user exists. Returns the uid for the
              given user, or 0 if the user wasn't found. Checking for the root
              user is not supported because its uid is 0, and it will always
              exist anyway.</para>
            </listitem>
          </varlistentry>
        </variablelist>

        <variablelist>
          <varlistentry>
            <term>nextuid</term>

            <listitem>
              <para>Returns the highest used uid plus one.</para>
            </listitem>
          </varlistentry>
        </variablelist>

        <variablelist>
          <varlistentry>
            <term>addgroup <replaceable>group</replaceable>
            [gid=<replaceable>gid</replaceable>]
            [passwd=<replaceable>passwd</replaceable>]
            [realname=<replaceable>realname</replaceable>]
            [users=<replaceable>users</replaceable>]</term>

            <listitem>
              <para>Add a new local group to the system, with the specified
              gid, password, real name, and with a list users as
              members.</para>
            </listitem>
          </varlistentry>
        </variablelist>

        <variablelist>
          <varlistentry>
            <term>existsgroup <replaceable>group</replaceable></term>

            <listitem>
              <para>Check if a local group exists and return the corresponding
              gid. This can be used with adduser:</para>

              <programlisting>addgroup foo
adduser foo gid=[existsgroup foo]</programlisting>
            </listitem>
          </varlistentry>
        </variablelist>

        <variablelist>
          <varlistentry>
            <term>nextgid</term>

            <listitem>
              <para>Returns the highest used gid plus one.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>External program execution</term>

      <listitem>
        <para>Use only when ....</para>
      </listitem>
    </varlistentry>
  </variablelist>
</section>
